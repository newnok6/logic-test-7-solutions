// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: internal/proto/meat.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeatRequest) Reset() {
	*x = MeatRequest{}
	mi := &file_internal_proto_meat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeatRequest) ProtoMessage() {}

func (x *MeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_meat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeatRequest.ProtoReflect.Descriptor instead.
func (*MeatRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_meat_proto_rawDescGZIP(), []int{0}
}

type MeatReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Beef          map[string]uint32      `protobuf:"bytes,1,rep,name=beef,proto3" json:"beef,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeatReply) Reset() {
	*x = MeatReply{}
	mi := &file_internal_proto_meat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeatReply) ProtoMessage() {}

func (x *MeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_meat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeatReply.ProtoReflect.Descriptor instead.
func (*MeatReply) Descriptor() ([]byte, []int) {
	return file_internal_proto_meat_proto_rawDescGZIP(), []int{1}
}

func (x *MeatReply) GetBeef() map[string]uint32 {
	if x != nil {
		return x.Beef
	}
	return nil
}

var File_internal_proto_meat_proto protoreflect.FileDescriptor

const file_internal_proto_meat_proto_rawDesc = "" +
	"\n" +
	"\x19internal/proto/meat.proto\x12\x05proto\"\r\n" +
	"\vMeatRequest\"t\n" +
	"\tMeatReply\x12.\n" +
	"\x04beef\x18\x01 \x03(\v2\x1a.proto.MeatReply.BeefEntryR\x04beef\x1a7\n" +
	"\tBeefEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x012@\n" +
	"\vMeatService\x121\n" +
	"\aGetMeat\x12\x12.proto.MeatRequest\x1a\x10.proto.MeatReply\"\x00B1Z/newnok6/logic-test/pie-fire-dire/internal/protob\x06proto3"

var (
	file_internal_proto_meat_proto_rawDescOnce sync.Once
	file_internal_proto_meat_proto_rawDescData []byte
)

func file_internal_proto_meat_proto_rawDescGZIP() []byte {
	file_internal_proto_meat_proto_rawDescOnce.Do(func() {
		file_internal_proto_meat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_proto_meat_proto_rawDesc), len(file_internal_proto_meat_proto_rawDesc)))
	})
	return file_internal_proto_meat_proto_rawDescData
}

var file_internal_proto_meat_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_internal_proto_meat_proto_goTypes = []any{
	(*MeatRequest)(nil), // 0: proto.MeatRequest
	(*MeatReply)(nil),   // 1: proto.MeatReply
	nil,                 // 2: proto.MeatReply.BeefEntry
}
var file_internal_proto_meat_proto_depIdxs = []int32{
	2, // 0: proto.MeatReply.beef:type_name -> proto.MeatReply.BeefEntry
	0, // 1: proto.MeatService.GetMeat:input_type -> proto.MeatRequest
	1, // 2: proto.MeatService.GetMeat:output_type -> proto.MeatReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_internal_proto_meat_proto_init() }
func file_internal_proto_meat_proto_init() {
	if File_internal_proto_meat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_proto_meat_proto_rawDesc), len(file_internal_proto_meat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_proto_meat_proto_goTypes,
		DependencyIndexes: file_internal_proto_meat_proto_depIdxs,
		MessageInfos:      file_internal_proto_meat_proto_msgTypes,
	}.Build()
	File_internal_proto_meat_proto = out.File
	file_internal_proto_meat_proto_goTypes = nil
	file_internal_proto_meat_proto_depIdxs = nil
}
